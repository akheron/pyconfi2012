CPython development
===================

.. footer:: Petri Lehtinen, PyCon Finland 2012

CPython Sprint

PyCon Finland 2012

http://piratepad.net/pyconfi-sprint


Workflow
--------

Get the code

Find something to work on

Make a patch

Post to issue tracker

Wait for a review


Workflow
--------

**Get the code**

Find something to work on

Make a patch

Post to issue tracker

Wait for a review


Get the code
------------

You already did this yesterday, right? :)

``hg clone http://hg.python.org/cpython``

``cd cpython``

``./configure --with-pydebug && make -j2``

``./python``

(``git clone git://github.com/akheron/cpython.git``)


Build the documentation
-----------------------

``make -C Doc html``

open ``Doc/build/html/index.html``



Workflow
--------

Get the code

**Find something to work on**

Make a patch

Post to issue tracker

Wait for a review


Create a tracker account
------------------------

You already did this yesterday too, right? :)

http://bugs.python.org/


Sign the contributor agreement
------------------------------

The PSF is asking all past and future contributors to sign a
Contributor Agreement.

Initial license --> The Python License


Find something to work on
-------------------------

http://piratepad.net/pyconfi-sprint-issues

http://bugs.python.org/ --> *Easy issues*

Interesting modules


Workflow
--------

Get the code

Find something to work on

**Make a patch**

Post to issue tracker

Wait for a review


Versions & branches
-------------------

Newest version: Python 3.3 (released on Oct 2012)

Bugfixes -> **2.7, 3.3, default**

New features -> **default**

**default** will eventually become 3.4

*(3.2 is actually also still open for bug fixes until 3.2.4 is
released)*


Versions & branches
-------------------

Make a patch against the oldest version first!

(The committer will merge it to the other branches.)

Use ``hg up 2.7`` to change to 2.7 branch


What's where?
-------------

``Lib/`` - stdlib modules & packages implemented in Python, tests in
``Lib/test/``

``Modules/`` - stdlib modules implemented in C

``Objects/`` - builtin types implemented in C (list, dict, tuple, str, ...)

``Python/`` - The ultimate core

``Include/`` - Common header files

``Misc/`` - Ohter files, e.g. ``Misc/NEWS`` & ``Misc/ACKS``


Sidenote: Misc/ACKS
-------------------

All contributors are listed here.

**You will be too!**

See http://hg.python.org/cpython/file/default/Misc/ACKS


Running the tests
-----------------

``./python -m test [-v] [test_name]``

e.g.

``./python -m test``

``./python -m test -v test_string``


Running the tests
-----------------

On 2.7 you do

``./python -m test.regrtest [-v] [test_name]``


Working with patches
--------------------

Create: ``hg diff > issueXXXXX.patch``

Apply: ``patch -p1 < issueXXXXX.patch``


Workflow
--------

Get the code

Find something to work on

Make a patch

**Post to issue tracker**

Wait for a review


Issue tracker
-------------

http://bugs.python.org/issueXXXXX

``issueXXXXX.patch`` (or whatever)


Workflow
--------

Get the code

Find something to work on

Make a patch

Post to issue tracker

**Wait for a review**


Wait for a review
-----------------

Ping me or Ezio!

.. image:: petri_lehtinen.jpg

.. image:: ezio_melotti.jpg
